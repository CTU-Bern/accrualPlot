% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accrual_plots.r
\name{accrual_plot_predict}
\alias{accrual_plot_predict}
\title{accrual_plot_predict}
\usage{
accrual_plot_predict(
  accrual_df,
  format_enrollment_dates = "\%d\%b\%Y",
  target,
  start_date = NA,
  format_start_date = "\%d\%b\%Y",
  current_date = NA,
  format_current_date = "\%d\%b\%Y",
  fill_up = c("yes", "no"),
  wfun = function(x) seq(1/nrow(x), 1, by = 1/nrow(x)),
  center_start_dates = NA,
  format_center_start_dates = "\%d\%b\%Y",
  targetc = NA,
  center_label = "Centers",
  design = 2,
  center_colors = NA,
  center_legend = c("number", "strip"),
  legend_text_size = 0.7,
  pos_prediction = c("out", "in", "none"),
  label_prediction = "Predicted end date: ",
  cex_prediction = 1.1,
  format_prediction = "\%B \%d, \%Y",
  ylim = NA,
  xlim = NA,
  ylab = "Recruited patients",
  xlabformat = "\%d\%b\%Y",
  xlabn = 5,
  xlabminn = xlabn\%/\%2,
  xlabpos = NA,
  xlabsrt = 45,
  xlabadj = c(1, 1),
  xlabcex = 1,
  mar = NA,
  ...
)
}
\arguments{
\item{accrual_df}{accrual data frame produced by accrual_create_df (optionally with by option as a list)
or dates on which patients are enrolled as date or character vector}

\item{format_enrollment_dates}{single character identifying the format of the dates,
ignored if accrual_df is a data frame or a date vector}

\item{target}{target sample size, can be a vector with the same length as accrual_df}

\item{start_date}{date when recruitment started,
single character/date, or a vector with the same length as accrual_df,
if not given the first enrollment date is used as start_date,}

\item{format_start_date}{format of the start date, ignored if start_date is a date}

\item{current_date}{date of the data export or database freeze,
single character/date, or a vector with the same length as accrual_df,
if not given the latest enrollment date is used,}

\item{format_current_date}{format of the current date, ignored if current_date is a date}

\item{fill_up}{whether to fill up days where no recruitment was observed,
otherwise these points do not contribute to the regression, default is yes}

\item{wfun}{function to calculate the weights based on the accrual data frame, default is
wfun<-function(x) seq(1 / nrow(x), 1, by = 1/nrow(x))}

\item{center_start_dates}{dates on which centers are enrolled as character or date vector,
required if center information should be shown}

\item{format_center_start_dates}{format of the center start date, ignored if enrollment_dates are dates}

\item{targetc}{target number of centers, required if center information should be shown,
can be a vector with the same length as accrual_df}

\item{center_label}{label for the center strip od axis}

\item{design}{design options for the addition of the center
1: barplots, 2 (default): strip below plot, 3: strip within plot, above line, 4: strip within plot, below line}

\item{center_colors}{colors to be used for the strip with the centers, a vector of length targetc}

\item{center_legend}{either "number" to plot numbers in the center strip or "strip" to add a legend strip,
requires specification of center_colors}

\item{legend_text_size}{size of the text of the center or legend strip, only has a function}

\item{pos_prediction}{position of text with predicted end date, out, in or none}

\item{label_prediction}{label for predicted end date}

\item{cex_prediction}{text size for predicted end date}

\item{format_prediction}{date format for predicted end date}

\item{ylim}{limits for y-axis, can be a vector with the same length as accrual_df}

\item{xlim}{limits for x-axis, can be a vector with the same length as accrual_df}

\item{ylab}{y-axis label}

\item{xlabformat}{format of date on x-axis}

\item{xlabn}{integer giving the desired number of intervals for the xlabel, default=5}

\item{xlabminn}{nonnegative integer giving the minimal number of intervals}

\item{xlabpos}{position of the x-label, can be a vector with the same length as accrual_df}

\item{xlabsrt}{rotation of x-axis labels in degrees}

\item{xlabadj}{adjustment of x-label, numeric vector with length 1 or 2 for different adjustment in x- and y-direction}

\item{xlabcex}{size of x-axis label}

\item{mar}{vector of length 4 (bottom, left, top, right margins), overwrite default margins}

\item{...}{further options passed to plot() and axis()}
}
\value{
A plot with cumulative accrual and the prediction to the end date.
}
\description{
Generates an accrual predction plot based on vector with enrollment dates and a target sample size.
Optionally the enrolled and targeted sites can be included.
}
\examples{
#Data
set.seed(2020)
enrollment_dates <- as.Date("2018-01-01") + sort(sample(1:30, 50, replace=TRUE))
center_start_dates<-enrollment_dates[sample(1:length(enrollment_dates),5)]

#Default plot
accrual_df<-accrual_create_df(enrollment_dates)
accrual_plot_predict(accrual_df=accrual_df,target=100)
accrual_plot_predict(accrual_df=enrollment_dates,target=100)

#Include site
accrual_plot_predict(accrual_df=accrual_df,target=100,
     center_start_dates=center_start_dates,targetc=10,center_label="Site")
accrual_plot_predict(accrual_df=accrual_df,target=100,
     center_start_dates=center_start_dates,targetc=10,
     center_colors=heat.colors(10),center_legend="strip")

#Design for site
accrual_plot_predict(accrual_df=accrual_df,target=100,
     center_start_dates=center_start_dates,targetc=10,design=1)

#Format prediction end date
accrual_plot_predict(accrual_df=accrual_df,target=100,
     pos_prediction="in",label_prediction="End of accrual: ",cex_prediction=1.2,
     format_prediction="\%Y-\%m-\%d",ylim=c(0,150))

#Format plot
accrual_plot_predict(accrual_df=accrual_df,target=100,
     ylab="No of recruited patients",ylim=c(0,150),
     xlabcex=1.2,xlabsrt=30,xlabn=5,xlabmin=5,
     mgp=c(3,0.5,0),cex.lab=1.2,cex.axis=1.2)

#accrual_df with by option
set.seed(2020)
centers<-sample(c("Site 1","Site 2","Site 3"),length(enrollment_dates),replace=TRUE)
accrual_df<-accrual_create_df(enrollment_dates,by=centers)
par(mfcol=c(2,2))
accrual_plot_predict(accrual_df=accrual_df,target=c(30,30,30,100))

}
